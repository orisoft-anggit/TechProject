@page "/login"
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorage

<h3>Login</h3>

<EditForm Model="@loginRequest" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="username">Username:</label>
        <InputText id="username" @bind-Value="loginRequest.UserName" class="form-control" />
    </div>

    <div class="form-group">
        <label for="password">Password:</label>
        <InputText id="password" @bind-Value="loginRequest.Password" class="form-control" type="password" />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger mt-3">@errorMessage</div>
}

@code {
    private CreateLoginRequest loginRequest = new CreateLoginRequest();
    private string errorMessage = string.Empty;

    private async Task HandleLogin()
    {
        var response = await HttpClient.PostAsJsonAsync("login", loginRequest);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<BaseResponse<string>>();
            if (result.Success)
            {
                await LocalStorage.SetItemAsync("authToken", result.Data);
                NavigationManager.NavigateTo("/");
            }
            else
            {
                errorMessage = result.Message;
            }
        }
        else
        {
            errorMessage = "An error occurred while logging in.";
        }
    }
}