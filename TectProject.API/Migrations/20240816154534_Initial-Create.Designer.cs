// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TectProject.API.Data;

#nullable disable

namespace TectProject.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240816154534_Initial-Create")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TectProject.API.Models.MsStorageLocation", b =>
                {
                    b.Property<string>("LocationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LocationName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationId");

                    b.ToTable("MsStorageLocations");
                });

            modelBuilder.Entity("TectProject.API.Models.MsUser", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("MsUsers");
                });

            modelBuilder.Entity("TectProject.API.Models.TrBpkb", b =>
                {
                    b.Property<string>("AgreementNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("BpkbDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BpkbDateIn")
                        .HasColumnType("datetime2");

                    b.Property<string>("BpkbNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FakturDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FakturNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LocationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PoliceNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AgreementNumber");

                    b.HasIndex("LocationId");

                    b.ToTable("TrBpkbs");
                });

            modelBuilder.Entity("TectProject.API.Models.TrBpkb", b =>
                {
                    b.HasOne("TectProject.API.Models.MsStorageLocation", "StorageLocation")
                        .WithMany("TrBpkbs")
                        .HasForeignKey("LocationId");

                    b.Navigation("StorageLocation");
                });

            modelBuilder.Entity("TectProject.API.Models.MsStorageLocation", b =>
                {
                    b.Navigation("TrBpkbs");
                });
#pragma warning restore 612, 618
        }
    }
}
